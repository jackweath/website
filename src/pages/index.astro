---
import Links from '../components/Home/Links.astro';
import Projects from '../components/Home/Projects.astro';
import Skills from '../components/Home/Skills.astro';
import Layout from '../layouts/Layout.astro';

var dob = new Date('05/16/1998');
//calculate month difference from current date in time
var month_diff = Date.now() - dob.getTime();

//convert the calculated difference in date format
var age_dt = new Date(month_diff);

//extract year from date
var year = age_dt.getUTCFullYear();

//now calculate the age of the user
var age = Math.abs(year - 1970);
---

<Layout>
    <main class="p-8 sm:p-12 lg:p-24 animate-fade-in">
        <section class="flex flex-col">
            <h1 class="text-4xl mb-2">Jack Weatherley.</h1>
            <h2 class="text-3xl mb-2">{age} year old</h2>
            <h3 class="text-2xl mb-2" id="subText"></h3>
        </section>
        <Skills />
        <!-- <Projects /> -->
        <Links />
    </main>
</Layout>

<script lang="js">
    class TextScramble {
        constructor(element) {
            this.element = element;
            this.chars = '!<>-_\\/[]{}â€”=+*^?#________';
        }
        setText = (newText) => {
            const oldText = this.element.innerText;
            const length = Math.max(oldText.length, newText.length);
            const promise = new Promise((resolve) => (this.resolve = resolve));
            this.queue = [];
            for (let i = 0; i < length; i++) {
                const from = oldText[i] || '';
                const to = newText[i] || '';
                const start = Math.floor(Math.random() * 40);
                const end = start + Math.floor(Math.random() * 40);
                this.queue.push({ from, to, start, end });
            }
            cancelAnimationFrame(this.frameRequest);
            this.frame = 0;
            this.update();
            return promise;
        };
        update = () => {
            let output = '';
            let complete = 0;
            for (let i = 0, n = this.queue.length; i < n; i++) {
                let { from, to, start, end, char } = this.queue[i];
                if (this.frame >= end) {
                    complete++;
                    output += to;
                } else if (this.frame >= start) {
                    if (!char || Math.random() < 0.15) {
                        char = this.randomChar();
                        this.queue[i].char = char;
                    }
                    output += `<span class="${
                        Math.random() <= 0.5 ? 'text-purple-600' : 'text-blue-600'
                    }">${char}</span>`;
                } else {
                    output += from;
                }
            }
            this.element.innerHTML = output;
            if (complete === this.queue.length) {
                this.resolve();
            } else {
                this.frameRequest = requestAnimationFrame(this.update);
                this.frame++;
            }
        };
        randomChar() {
            return this.chars[Math.floor(Math.random() * this.chars.length)];
        }
    }
    const strings = [
        'Software Engineer',
        'Rock Climber',
        'Guitarist',
        'Photographer',
        // 'Videographer'
    ];

    const element = document.querySelector('#subText');
    const tS = new TextScramble(element);

    let counter = 0;
    const next = () => {
        tS.setText(strings[counter]).then(() => {
            setTimeout(next, 2000);
        });
        counter = (counter + 1) % strings.length;
    };
    next();
</script>
